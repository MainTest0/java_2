정보를 제공하는 주체 = 웹 서버
정보를 받는 이용자 = 웹 클라이언트

안드로이드나 IOS = 클라이언트(정보를 전달 받음)
HTTP란 웹상에서 서로 통신하기 위한 규칙
HTTP, HTTPS 전세계 연결되어있는 광케이블 선에서
---------------------------------------
웹 발전, 웹 보안의 중요성
단순히 정보를 보여주는 것에서 정보를 검색하고 직접 ㅔㅈ품을 구맿라 수잇도록 변화
오프라인에서 이뤄지던 상호작용이 디지털 형태로 변환되어 웹서비스로 구현
정보자산이 많아짐에따라 안전하게 보관하고 처리해야할 필요성 증가
민감한 정보들이 유출,악용되지않도록 보안의 중요성이 대두되고있다.
--------------------------------------------
웹 서비스, 프론트엔드와 백엔드
프론트엔드와 백엔드의 구분
웹 서비스는 다양한 기능을 수행하는 형태로 발전
현재는 이용자의 요청을 해석, 가공해서 적절한 정보를 제공하는 능동적인 서비스로 변화
구글은 검색어라는 형태로 원하는 정보를 추상화해서 전달하면 해석해서 가공하여 정보 제시
이용자의 요청을 받는 부분을 프론트엔드, 요청을 처리하는 부분을 백엔드
호텔 프론트에서 서비스를 요청하면 고객모르게 복잡한 일들이 벌어지는것과 비슷하다.
프론트엔드는 웹 리소스로 구성되어있다. 페이지가 보여주고있는 정보들은 모두
웹 리소스에 명시되어있다. 즉 웹 상에 존재하는 자원이다.
---------------------------------------
웹 리소스란?
웹에 갖춰진 정보자산을 의미한다.
주소창에 https://www.naver.com/index.html
네이버라는 어떤 폴더안에 html파일을 나한테 던져달라라는 말이다.
그게 리소스이다.
내 컴퓨터는 누구나 접근할 수 있는 컴퓨터로 만들었다.
c드라이버에 naver라는 폴더만들어서 폴더안에 새파일 index.html을 만들면
내 컴퓨터에 정해진 규칙속에 접근해서 문자열로 던져주는 것
주소창에 컴퓨터에 접근해서 자원을 요청하면 응답해주는 것
모든 웹 리소스는 고유의 URI를 가지며 이를 이용해 식별된다.

웹 프론트엔드를 구성하는 대표적인 웹 리소스
HTML, CSS, JS
다른사람이 내컴퓨터에 접근해서 자원을 요청하면
 버퍼드리더,버퍼드라이트를 통해 던진다.
------------------------------
웹 클라이언트와 서버의 통신
웹 서비스의 통신 과정을 간략화하면 다음과 같습니다.
클라이언트가 메세지 만들어서 서버에 전달 -> 해석 후 적절한 동작 요구
->select 하거나 내 컴퓨터에 존재하는 html파일 던져주거나, 복잡한 연산을 해야한다?
(송금,입금) 연산 끝나면 클라이언트한테 알려줌
네이버라는 폴더만들고 물리적으로 존재하는 인덱스.html 만들고 얘들은 존재하는ㄴ 녀석
-> 정적 자원

그러면 반대되는 개념 동적자원은?(동적 리소스)
웹 브라우저에서 유저3번의 정보를 던져달라 요청
user에 대한 정보를 파일로 안만들어놓았음
이 회원이 만명이면 만개 생성해야해서 없음
우리가 하는 방식은dao까지가서 select 만들어서 결과집합 만들어서 던진다.
이게 동적자원

정적인 자원은 우리가 실제로 만든 파일들
블로그 쓰는거 -> 파일에 blog1.html blog2.html 다 만든다? 아니다
db에 넣어서 쓴다.
정적자원 요청시 URL로 요청
동적자원 요청시 URI로 요청

용어 정리 
 

통신:

정보를 전하는 것. 현대에는 전화, 인터넷 등의 통신 수단을 이용하여 과거보다 시간과 공간의 제약을 받지 않고 이뤄짐.

웹 : 인터넷이라는 통신망을 활용하여 구현된 전 지구적 정보 공간
웹 클라이언트: 웹에서 정보를 요구하는 주체
웹 서버: 웹에서 정보를 제공하는 주체
웹 리소스: 웹 서버가 제공하는 정보 자원(e.g. HTML, Javascript, CSS 등) --> 파일이 있기때문에 정적 자원
웹 서비스: 웹 상에서 제공되는 서비스 (e.g. SNS, 온라인 쇼핑몰 등)

웹 브라우저란?
웹은 인터넷이라는 글로벌 네트워크에 구현되어있다. 많은 통신망
일본은 어떻게 통신할까? 해저케이블로 엄청난 선을통해 연결되어있다.
정해진 프로토콜 기반으로 통신한다. (HTTP,HTTPS)
개발자가 아닌 일반 이용자가 이런 규칙을 이해하고 사용하기는 어렵다.
20세기 등장한 웹 브라우저는 서버와 http통신 대신해주고 수신한 리소스를 시각화해서
위와같은 문제를 해결했다
웹 브라우저는 뛰어난 이용자 경험(User eXperience, UX)를 제공하는 소프트웨어중 하나
웹브라우저 쓸때 크롬, 엣지쓰는거 학습해야하나? 경험있어서 빨리 쓸수있다.
새 안드로이드폰 쓸 때 경험이 있어서 다 알고있다.
UX가 잘 만든 것은 메뉴가 아래있다는 것을 사람들이 다 알고있다는 것이다.
메뉴가 이상한 곳에있으면 UX가 나쁘다는 것

웹 브라우저의 주소창에 입력된 주소(naver.com)를 해석 (URL 분석)
naver.com에 해당하는 주소 탐색 (DNS(Domain Name Server) 요청)
HTTP를 통해 naver.com 에 요청
naver.com의 HTTP 응답 수신
리소스 다운로드 및 웹 렌더링 (HTML, CSS, Javascript)

DNS란?
우리가 host를 공인ip를 통해 컴퓨터 내부로 들어올수있다.(허용된 폴더만)
ip주소가 외우긴 힘들다 그래서 만든거-> DNS 라는 서버만듬
내 주소가 1234라는 ip주소면 dns에 등록해놓음
어떤 일이 벌어지냐
사용자가 주소를 외우는게아니라 단어를 입력하면 dns로 넘어가서 매핑 후 찾아감
-> dns 서버라고 한다.

URL이란?
URL은 Uniform Resource Locator의 약자로, 
웹에 있는 리소스의 위치를 표현하는 문자열입니다. 
브라우저로 특정 웹 리소스에 접근할 때는, URL을 사용하여 
이를 서버에게 요청합니다. 다음은 URL의 예시입니다.
URL은 Scheme, Authority (Userinfo, Host, Port), Path, Query, 
Fragment 등으로 구성됩니다. 이 중 자주 사용되는 요소는 다음과 같습니다.


웹 렌더링이란?
서버로부터 받은 자원을 이용자에게 시각화하는행위
서버로부터 html과 css를 받으면 브라우저는 html을 파싱하고 css적용해서 이용자한테 보여준다.
브라우저별로 다른엔진 사용

JSON (JavaScript Object Notation) 이란?
JSON은 경량의 DATA 교환 형식
옛날에는 xml을 많이 썼음 html 확장이라는 얘긴데
<address>
	부산시 중구...(값)
</address>

xml은 태그를 많이 써야하는데 용량 많이차지
JSON많이 사용
